apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowforge
  labels:
    app: flowforge
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flowforge
  template:
    metadata:
      labels:
        app: flowforge
      annotations:
        {{- if .Values.forge.telemetry.backend.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        {{- end  }}
    spec:
      serviceAccountName: flowforge
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: forge
        {{- if .Values.forge.image }}
        image: {{ .Values.forge.image }}
        {{ else }}
        image: {{ .Values.forge.registry }}{{- if .Values.forge.registry -}}/{{- end -}}flowforge/forge-k8s:{{ .Chart.AppVersion }}
        {{ end -}}
        imagePullPolicy: Always
        env:
        {{- if .Values.ingress.annotations }}
        - name: INGRESS_ANNOTATIONS
          value: {{ .Values.ingress.annotations | toJson | quote }}
        {{- end }}
        {{- if .Values.ingress.className }}
        - name: INGRESS_CLASS_NAME
          value: {{ .Values.ingress.className }}
        {{- end }}
        {{- if .Values.editors.serviceAccount }}
        - name: EDITOR_SERVICE_ACCOUNT
          value: {{ .Values.editors.serviceAccount.name }}
        {{- end }}
        {{- if .Values.forge.projectDeploymentTolerations }}
        - name: DEPLOYMENT_TOLERATIONS
          value: {{ .Values.forge.projectDeploymentTolerations | toJson | quote }}
        {{- end }}
        {{- if .Values.forge.cloudProvider }}
        - name: FLOWFORGE_CLOUD_PROVIDER
          value: {{ .Values.forge.cloudProvider }}
        {{- end }}
        {{- if .Values.forge.privateCA }}
        - name: NODE_EXTRA_CA_CERTS
          value: /usr/local/ssl-certs/chain.pem
        {{- end }}
        {{- if and (hasKey .Values.forge.telemetry "sentry") (hasKey .Values.forge.telemetry.sentry "environment") }}
        - name: SENTRY_ENV
          value: {{ .Values.forge.telemetry.sentry.environment }}
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /usr/src/forge/etc
        {{- if .Values.forge.privateCA }}
        - name: cacert
          mountPath: /usr/local/ssl-certs
          readOnly: true
        {{- end }}
        ports:
        - containerPort: 3000
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      {{- if .Values.forge.registrySecrets }}
      imagePullSecrets:
      {{- range .Values.forge.registrySecrets }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: flowforge-config
      {{- if .Values.forge.privateCA }}
      - name: cacert
        configMap:
          name: {{ .Values.forge.privateCA.configMapName }}
      {{- end }}
      {{- if .Values.forge.managementSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.forge.managementSelector }}
        {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
