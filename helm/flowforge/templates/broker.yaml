{{- if .Values.forge.broker.enabled -}}
{{- $brokerHostname := or (.Values.forge.entryPoint) (printf "%s%s" "mqtt." .Values.forge.domain) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: flowforge-broker-config
  labels:
    {{- include "forge.labels" . | nindent 4 }}
data:
  mosquitto.conf: |
    per_listener_settings false
    allow_anonymous false

    listener 1883 0.0.0.0
    listener 1884 0.0.0.0
    protocol websockets
    http_dir /http

    auth_plugin /mosquitto/go-auth.so
    auth_opt_backends http
    auth_opt_hasher bcrypt
    auth_opt_cache true
    auth_opt_auth_cache_seconds 120
    auth_opt_acl_cache_seconds 300
    auth_opt_auth_jitter_second 3
    auth_opt_acl_jitter_seconds 5

    auth_opt_http_host forge.{{ .Release.Namespace }}
    auth_opt_http_port 80
    auth_opt_http_getuser_uri /api/comms/auth/client
    auth_opt_http_aclcheck_uri /api/comms/auth/acl
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flowforge-broker-ping
  labels:
    {{- include "forge.labels" . | nindent 4 }}
data:
  ping.html: |
    <html>
      <head>
        <title>Mosquitto Liveness Check</title>
        <body>
          <h1>HelloWorld</h1>
        </body>
      </head>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: flowforge-broker
  labels:
    {{- include "forge.labels" . | nindent 4 }}
    {{- with .Values.forge.broker.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
     {{- include "forge.brokerSelectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "forge.brokerSelectorLabels" . | nindent 8 }}
        {{- with .Values.forge.broker.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.forge.broker.podSecurityContext | nindent 8 }}
      containers:
      - name: broker
        image: iegomez/mosquitto-go-auth
        imagePullPolicy: Always
        volumeMounts:
        - name: config
          mountPath: /etc/mosquitto
        - name: ping
          mountPath: /http
        ports:
        - containerPort: 1883
          name: mqtt-native
        - containerPort: 1884
          name: mqtt-ws
        securityContext: {{- toYaml .Values.forge.broker.containerSecurityContext | nindent 10 }}
        {{- if .Values.forge.broker.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /ping.html
            port: 1884
          initialDelaySeconds: {{ .Values.forge.broker.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.forge.broker.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.forge.broker.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.forge.broker.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.forge.broker.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.forge.broker.readinessProbe }}
        readinessProbe:
          httpGet:
            path: /ping.html
            port: 1884
          initialDelaySeconds: {{ .Values.forge.broker.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.forge.broker.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.forge.broker.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.forge.broker.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.forge.broker.readinessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.forge.broker.startupProbe }}
        startupProbe:
          httpGet:
            path: /ping.html
            port: 1884
          initialDelaySeconds: {{ .Values.forge.broker.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.forge.broker.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.forge.broker.startupProbe.timeoutSeconds }}
          successThreshold: {{ .Values.forge.broker.startupProbe.successThreshold }}
          failureThreshold: {{ .Values.forge.broker.startupProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.forge.broker.resources }}
        resources: {{- toYaml .Values.forge.broker.resources | nindent 12 }}
        {{- end }}
      {{- if .Values.forge.registrySecrets }}
      imagePullSecrets:
      {{- range .Values.forge.registrySecrets }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: flowforge-broker-config
      - name: ping
        configMap:
          name: flowforge-broker-ping
      {{- if .Values.forge.managementSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.forge.managementSelector }}
        {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      {{- if .Values.forge.broker.affinity }}
      affinity: {{ toYaml .Values.forge.broker.affinity | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: flowforge-broker
  labels:
  {{- include "forge.labels" . | nindent 4 }}
spec:
  ports:
  - port: 1883
    targetPort: 1883
    protocol: TCP
    name: mqtt-native
  - port: 1884
    targetPort: 1884
    protocol: TCP
    name: mqtt-ws
  selector:
    {{- include "forge.brokerSelectorLabels" . | nindent 4 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flowforge-broker
  labels:
    {{- include "forge.brokerSelectorLabels" . | nindent 4 }}
  annotations:
  {{- if .Values.ingress.certManagerIssuer }}
    cert-manager.io/cluster-issuer: {{ $.Values.ingress.certManagerIssuer }}
  {{- end }}
  {{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | replace "{{ instanceHost }}" $brokerHostname | replace "{{ serviceName }}" "flowforge-broker" | indent 4 }}
  {{- end }}
spec:
  {{- if $.Values.ingress.className }}
  ingressClassName: {{ $.Values.ingress.className }}
  {{- end }}
  rules:
    - host: mqtt.{{ .Values.forge.domain }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: flowforge-broker
                port:
                  number: 1884
  {{- if .Values.ingress.certManagerIssuer }}
  tls:
  - hosts:
    - mqtt.{{ .Values.forge.domain }}
    secretName: mqtt.{{ .Values.forge.domain }}
  {{- end }}
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: flowforge-broker-native
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 1883
#     targetPort: mqtt-native
#     protocol: TCP
#     name: mqtt-native
#   selector:
#     app: flowforge-broker
{{- end -}}