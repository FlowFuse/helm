{{- if and ( eq .Values.forge.broker.enabled true) ( eq .Values.forge.broker.teamBroker.enabled true )  -}}
{{- if not (.Capabilities.APIVersions.Has "apps.emqx.io/v2beta1") }}
{{- fail "EMQX Operator not installed. Please install it or disable team broker before continuing" }}
{{- end }}
apiVersion: apps.emqx.io/v2beta1
kind: EMQX
metadata:
    name: emqx
spec:
    image: {{ .Values.broker.image }}
    imagePullPolicy: IfNotPresent
    config:
        data: |
{{- tpl .Values.broker.config . | nindent 10 }}
    bootstrapAPIKeys:
      - secretRef:
            key:
                secretName: emqx-config-secrets
                secretKey: api_key_name
            secret:
                secretName: emqx-config-secrets
                secretKey: api_key_secret
    coreTemplate:
        spec:
            {{- if .Values.forge.registrySecrets }}
            imagePullSecrets:
            {{- range .Values.forge.registrySecrets }}
              - name: {{ . }}
            {{- end }}
            {{- end }}
            env:
              - name: EMQX_DASHBOARD__DEFAULT_PASSWORD
                valueFrom:
                    secretKeyRef:
                        {{- if .Values.broker.exisitingSecret }}
                        name: {{ .Values.broker.exisitingSecret }}
                        {{- else }}
                        name: emqx-config-secrets
                        {{- end }}
                        key: EMQX_DASHBOARD__DEFAULT_PASSWORD
            volumeClaimTemplates:
                {{- if .Values.broker.storageClassName }}
                storageClassName: {{ .Values.broker.storageClassName }}
                {{- end}}
                resources:
                    requests:
                        storage: 5Gi
                accessModes:
                    - ReadWriteOnce
            extraVolumes:
              - name: config
                secret:
                    {{- if .Values.broker.exisitingSecret }}
                    secretName: {{ .Values.broker.exisitingSecret }}
                    {{- else }}
                    secretName: emqx-config-secrets
                    {{- end }}
            extraVolumeMounts:
              - name: config
                mountPath: /mounted/config/api-keys
                subPath: api-keys
            {{- if .Values.forge.broker.affinity }}
            affinity: {{ toYaml .Values.forge.broker.affinity | indent 12 }}
            {{- end }}
            {{- if .Values.forge.broker.tolerations}}
            tolerations:
            {{ toYaml .Values.forge.broker.tolerations | nindent 12 }}
            {{- end }}
    listenersServiceTemplate:
        {{- if .Values.broker.listenersServiceTemplate }}
{{ toYaml .Values.broker.listenersServiceTemplate | indent 8 }}
        {{ else }}
        spec:
            type: ClusterIP
        {{- end }}
    dashboardServiceTemplate:
        {{- if .Values.broker.dashboardServiceTemplate }}
{{ toYaml .Values.broker.dashboardServiceTemplate | indent 8 }}
        {{ else }}
        spec:
            type: ClusterIP
        {{- end }}
---
{{- if not .Values.broker.exisitingSecret }}
apiVersion: v1
kind: Secret
metadata:
    name: emqx-config-secrets
    namespace: {{ .Release.Namespace }}
type: Opaque
data:
    EMQX_DASHBOARD__DEFAULT_PASSWORD: {{ "topSecret" | b64enc | quote }}
    api_key_name: {{ "flowfuse" | b64enc | quote }} 
    api_key_secret: {{ include "emqx.bootstrapApiKeySecret" . | b64enc | quote }}
---
{{- end }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: flowforge-broker
    labels:
      {{- include "forge.brokerSelectorLabels" . | nindent 4 }}
    annotations:
    {{- if .Values.ingress.certManagerIssuer }}
        cert-manager.io/cluster-issuer: {{ .Values.ingress.certManagerIssuer }}
    {{- end }}
  {{- $filteredAnnotations := include "forge.filteredBrokerIngressAnnotations" . | replace "{{ instanceHost }}" "{{ include forge.brokerDomain . }}" | replace "{{ serviceName }}" "flowforge-broker" }}
  {{- if $filteredAnnotations }}
{{ $filteredAnnotations | indent 4 }}
  {{- end }}
spec:
    {{- if $.Values.ingress.className }}
    ingressClassName: {{ $.Values.ingress.className }}
    {{- end }}
    rules:
      - host: {{ include "forge.brokerDomain" . }}
        http:
            paths:
              - pathType: Prefix
                path: /
                backend:
                    service:
                        name: emqx-listeners
                        port:
                            number: 8080
  {{- if include "forge.brokerCertManagerEnabled" . }}
    tls:
    - hosts:
        - {{ include "forge.brokerDomain" . }}
        secretName: {{ include "forge.brokerDomain" . }}
  {{- end }}

{{- end }}