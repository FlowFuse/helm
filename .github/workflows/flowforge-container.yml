name: Flowforge - build and deploy
on:
  workflow_dispatch:
    inputs:
      flowforge_release_name:
        description: 'flowforge package version'
        required: false
        default: 'nightly'
      flowforge_ref:
        description: 'flowforge package ref'
        required: false
  push:
    branches:
      - main
    paths:
      - 'flowforge-container/**'
      - '.github/workflows/flowforge-container.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'flowforge-container/**'
      - '.github/workflows/flowforge-container.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    name: Build single-architecture container images
    uses: flowfuse/github-actions-workflows/.github/workflows/build_container_image.yml@v0.10.0
    with:
      image_name: 'forge-k8s'
      package_dependencies: |
        @flowfuse/flowfuse
        @flowfuse/driver-kubernetes
      build_context: 'flowforge-container'
      npm_registry_url: ${{ vars.PUBLIC_NPM_REGISTRY_URL }}
      scan_image: true
    secrets:
      npm_registry_auth_token: ${{ secrets.NPM_PUBLISH_TOKEN }}
      temporary_registry_token: ${{ secrets.GITHUB_TOKEN }}

  build-multi-architecture:
    name: Build multi-architecture container image
    needs: build
    uses: flowfuse/github-actions-workflows/.github/workflows/merge_multiarch_images.yml@v0.10.0
    with:
      image_name: 'forge-k8s'
    secrets:
      temporary_registry_token: ${{ secrets.GITHUB_TOKEN }}

  upload-stage-image:
    # if: github.ref_name == 'main'
    name: Upload image to staging registry
    needs: build-multi-architecture
    uses: flowfuse/github-actions-workflows/.github/workflows/deploy_container_image.yml@v0.19.0
    with:
      environment: stage
      service_name: 'forge-k8s'
      deployment_name: flowforge
      container_name: forge
      deploy: false
      image: ${{ needs.build-multi-architecture.outputs.image }}
    secrets:
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
      temporary_registry_token: ${{ secrets.GITHUB_TOKEN }}
      eks_cluster_name: ${{ secrets.EKS_CLUSTER_NAME }}

  update-stage-image:
    # if: github.ref_name == 'main'
    name: Update staging image
    needs: upload-stage-image
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - name: Configure AWS credentials
        id: aws-config
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: eu-west-1
          mask-aws-account-id: true
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.GH_BOT_APP_ID }}
          private_key: ${{ secrets.GH_BOT_APP_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'FlowFuse/CloudProject'
          ref: 'ci-flowfuse-helm'
          token: ${{ steps.generate_token.outputs.token }}
      - name: Install yq
        uses: alexellis/arkade-get@master
        with:
          yq: v4.42.1
      - name: Update staging deployment
        run: |
          image_value="${{ steps.aws-config.outputs.aws-account-id }}.dkr.ecr.eu-west-1.amazonaws.com/flowforge/${{ needs.upload-stage-image.outputs.image }}"
          yq e ".forge.image = \"$image_value\"" -i ./staging/flowfuse-values.yaml
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add ./staging/flowfuse-values.yaml
          git commit -m "Update forge staging image to ${{ needs.upload-stage-image.outputs.image }}"
      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          branch: ci-flowfuse-helm
          repository: 'FlowFuse/CloudProject'
          force: true
          github_token: ${{ steps.generate_token.outputs.token }}

  upload-production-image:
    # if: github.ref_name == 'main'
    name: Upload image to production registry
    needs: build-multi-architecture
    uses: flowfuse/github-actions-workflows/.github/workflows/deploy_container_image.yml@v0.19.0
    with:
      environment: production
      service_name: 'forge-k8s'
      deployment_name: flowforge
      container_name: forge
      deploy: false
      image: ${{ needs.build-multi-architecture.outputs.image }}
    secrets:
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
      temporary_registry_token: ${{ secrets.GITHUB_TOKEN }}
      eks_cluster_name: ${{ secrets.EKS_CLUSTER_NAME }}

  update-production-image:
    # if: github.ref_name == 'main'
    name: Update production image
    needs: upload-production-image
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Configure AWS credentials
        id: aws-config
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: eu-west-1
          mask-aws-account-id: true
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.GH_BOT_APP_ID }}
          private_key: ${{ secrets.GH_BOT_APP_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'FlowFuse/CloudProject'
          ref: 'ci-flowfuse-helm'
          token: ${{ steps.generate_token.outputs.token }}
      - name: Install yq
        uses: alexellis/arkade-get@master
        with:
          yq: v4.42.1
      - name: Update production deployment
        run: |
          image_value="${{ steps.aws-config.outputs.aws-account-id }}.dkr.ecr.eu-west-1.amazonaws.com/flowforge/${{ needs.upload-production-image.outputs.image }}"
          yq e ".forge.image = \"$image_value\"" -i ./production/flowfuse-values.yaml
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add ./production/flowfuse-values.yaml
          git commit -m "Update forge production image to ${{ needs.upload-production-image.outputs.image }}"
      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          branch: ci-flowfuse-helm
          repository: 'FlowFuse/CloudProject'
          force: true
          github_token: ${{ steps.generate_token.outputs.token }}
  
  deploy-stage:
    if: github.ref_name == 'main'
    name: Deploy to staging environment
    needs: build-multi-architecture
    uses: flowfuse/github-actions-workflows/.github/workflows/deploy_container_image.yml@v0.19.0
    with:
      environment: stage
      service_name: 'forge-k8s'
      deployment_name: flowforge
      container_name: forge
      image: ${{ needs.build-multi-architecture.outputs.image }}
    secrets:
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
      temporary_registry_token: ${{ secrets.GITHUB_TOKEN }}
      eks_cluster_name: ${{ secrets.EKS_CLUSTER_NAME }}
  
  deploy-prod:
    if: github.ref_name == 'main'
    name: Deploy to production environment
    needs: [build-multi-architecture, deploy-stage]
    uses: flowfuse/github-actions-workflows/.github/workflows/deploy_container_image.yml@v0.19.0
    with:
      environment: production
      service_name: 'forge-k8s'
      deployment_name: flowforge
      container_name: forge
      image: ${{ needs.build-multi-architecture.outputs.image }}
    secrets:
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
      temporary_registry_token: ${{ secrets.GITHUB_TOKEN }}
      eks_cluster_name: ${{ secrets.EKS_CLUSTER_NAME }}
